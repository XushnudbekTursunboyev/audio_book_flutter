import 'package:audio_book_flutter/data/model/book_model.dart';import 'package:audio_book_flutter/data/repository/app_repository_impl.dart';import 'package:audio_book_flutter/domain/repository/app_repository.dart';import 'package:bloc/bloc.dart';import 'package:meta/meta.dart';part 'playing_event.dart';part 'playing_state.dart';class PlayingBloc extends Bloc<PlayingEvent, PlayingState> {  final AppRepository _repository = AppRepositoryImpl();  PlayingBloc() : super(PlayingInitial()) {    on<GetBookByIdEvent>((event, emit) async {      try {        BookData book = await _repository.getBookById(event.id);        emit(GetBookByIdState(book));      } catch (e) {      }    });    on<OpenBookFileEvent>((event, emit) {      emit(OpenBookFileState(event.url));    });  }}