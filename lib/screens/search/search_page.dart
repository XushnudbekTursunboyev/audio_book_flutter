import 'package:audio_book_flutter/data/model/book_model.dart';import 'package:audio_book_flutter/screens/components/search_items.dart';import 'package:audio_book_flutter/screens/main/ui/home_screen.dart';import 'package:audio_book_flutter/screens/playing/playing_screen.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'bloc/search_bloc.dart';class SearchPage extends StatefulWidget {  const SearchPage({super.key});  @override  State<SearchPage> createState() => _SearchPageState();}class _SearchPageState extends State<SearchPage> {  final TextEditingController _searchController = TextEditingController();  List<BookData> data = [];  @override  void dispose() {    _searchController.dispose();    super.dispose();  }  @override  Widget build(BuildContext context) {    return BlocProvider(      create: (context) => SearchBloc(),      child: BlocConsumer<SearchBloc, SearchState>(        listener: (context, state) {          if (state is BookSearchByTitleState) {            setState(() {              data = state.books;            });          }          if (state is BookToPlayState) {            Navigator.push(              context,              PageRouteBuilder(                pageBuilder: (context, animation, secondaryAnimation) =>                    PlayingPage(state.id),                transitionsBuilder:                    (context, animation, secondaryAnimation, child) {                  const begin = Offset(1.0, 0.0);                  const end = Offset.zero;                  const curve = Curves.ease;                  var tween = Tween(begin: begin, end: end)                      .chain(CurveTween(curve: curve));                  var offsetAnimation = animation.drive(tween);                  return SlideTransition(                    position: offsetAnimation,                    child: child,                  );                },              ),            );          }        },        builder: (context, state) {          return Scaffold(            body: SafeArea(              child: Column(                children: [                  Padding(                    padding: const EdgeInsets.all(25.0),                    child: Container(                      width: MediaQuery.of(context).size.width,                      height: 39,                      decoration: ShapeDecoration(                        color: const Color(0xFFF3F3F3),                        shape: RoundedRectangleBorder(                          side: const BorderSide(                              width: 1, color: Color(0xFFF26B6C)),                          borderRadius: BorderRadius.circular(5),                        ),                      ),                      child: Row(                        children: [                          const SizedBox(width: 10),                          InkWell(                            onTap: () {                              Navigator.pushReplacement(context, MaterialPageRoute(builder: (context) => const HomeScreen()));                            },                            child: const Icon(Icons.arrow_back_rounded,                                color: Color(0xFF565656)),                          ),                          const SizedBox(width: 10),                          Expanded(                            child: TextField(                              controller: _searchController,                              onChanged: (text) {                                context                                    .read<SearchBloc>()                                    .add(BookSearchByTitleEvent(text));                              },                              style: const TextStyle(                                color: Color(0xFF565656),                                fontSize: 12,                                fontFamily: 'Uni Neue',                                fontWeight: FontWeight.w500,                              ),                              decoration: const InputDecoration(                                hintText: "search books",                                hintStyle: TextStyle(                                  color: Color(0xFF565656),                                  fontSize: 12,                                  fontFamily: 'Uni Neue',                                  fontWeight: FontWeight.w500,                                ),                                border: InputBorder.none,                                contentPadding:                                    EdgeInsets.symmetric(vertical: 13),                              ),                            ),                          ),                        ],                      ),                    ),                  ),                  Expanded(                    child: Padding(                      padding: const EdgeInsets.symmetric(horizontal: 15.0),                      child: ListView.builder(                          itemCount: data.length,                          itemBuilder: (context, index) {                            return AudioBookListItem(                              title: data[index].title ?? "Loading..",                              onTap: () {                                context                                    .read<SearchBloc>()                                    .add(BookToPlayEvent(data[index].id!));                              },                            );                          }),                    ),                  ),                ],              ),            ),          );        },      ),    );  }}